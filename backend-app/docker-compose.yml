version: '3.8'

services:
  api:
    image: node:lts-gallium
    container_name: api-container
    restart: always
    working_dir: /app
    env_file:
      - .env
    environment:
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB_NAME: ${PG_DB_NAME}
      DB_CONNECTION: ${DB_CONNECTION}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - ${PORT}:3333
    links:
      - postgres
    depends_on:
      - postgres
      - redis
    volumes:
      - ./:/app
    command: bash -c "yarn && yarn dev" # install node modules and start adonis server
    labels:
      - "traefik.http.routers.api.rule=Host(`api.devices-app.localhost`)"

  postgres:
    container_name: postgres-container
    image: postgres
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./dockerConfig/postgres-dev-init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB_NAME}
    ports:
      - ${PG_PORT}:5432
    labels:
      - "traefik.http.routers.postgres.rule=Host(`db.devices-app.localhost`)"

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    links:
      - postgres
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PWD}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_DB_NAME: ${PG_DB_NAME}
      DB_CONNECTION: ${DB_CONNECTION}
    ports:
      - 5050:80 #${PG_ADMIN_PORT}:80
    labels:
      - "traefik.http.routers.pgadmin.rule=Host(`db-client.devices-app.localhost`)"

  redis:
    container_name: redis-container
    image: redis:alpine
    restart: always
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data
    labels:
      - "traefik.http.routers.redis.rule=Host(`redis.devices-app.localhost`)"

  redisinsight: # redis db visualization dashboard
    container_name: redis-insight-container
    image: redislabs/redisinsight
    links:
      - redis
    depends_on:
      - redis
    ports:
      - 8001:8001
    volumes:
      - redis-insight:/db
    labels:
      - "traefik.http.routers.redis-commander.rule=Host(`redis-ui.devices-app.localhost`)"

  traefik:
    container_name: traefik-container
    image: traefik:v2.5
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgres:
  cache:
  redis-insight:
